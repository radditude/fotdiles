#!/usr/bin/env bash -e

TIMESHEET="$DOTFILES/secret/timesheet.sh"

source $DOTFILES/functions/log
source $DOTFILES/functions/fuzzy_match

usage() {
  echo ""
  success "Generate and manage prefilled Airtable urls for time tracking"
  info "USAGE:"
  info "  $(basename $0) <day> <project> <hours> [category] [notes]"
  info "    - generates a prefilled URL for a single project and day"
  info "    - category and notes are optional"
  info "      Examples:"
  info "        - $(basename $0) fri meet 1"
  info "        - $(basename $0) fri meet 1 impl \"all hands\" "
  info "  $(basename $0) [edit|open]"
  info "    - open timesheet"
  info "  $(basename $0) submit"
  info "    - run timesheet and enter all hours for the week"
  info "  $(basename $0) [help|usage]"
  info "    - this message"
  echo ""
  exit
}

fuzzy_find_time(){
  # PROJECTS
  if   fuzzy_match $1 content;         then echo "Content"
  elif fuzzy_match $1 devtools;        then echo "Dev Tools"
  elif fuzzy_match $1 education;       then echo "Education"
  elif fuzzy_match $1 harmonium;       then echo "Harmonium"
  elif fuzzy_match $1 incentivize;     then echo "Incentivize"
  elif fuzzy_match $1 meetings;        then echo "Company Meetings"
  elif fuzzy_match $1 sick;            then echo "PTO - Sick"
  elif fuzzy_match $1 pto;             then echo "PTO - Vacation"
  elif fuzzy_match $1 dcm;             then echo $DCM_TIME
  elif fuzzy_match $1 platform;        then echo $PLATFORM_TIME
  elif fuzzy_match $1 tss;             then echo $TSS_TIME
  elif fuzzy_match $1 hunit;           then echo $HUNIT_TIME
  elif fuzzy_match $1 pairr;           then echo $PAIRR_TIME
  # CATEGORIES
  elif fuzzy_match $1 implementation;  then echo "Implementation"
  elif fuzzy_match $1 internaltime;    then echo "Internal Time"
  elif fuzzy_match $1 nonbillable;     then echo "Non-Billable"
  elif fuzzy_match $1 travel;          then echo "Travel"

  else
    echo "No match found!"
    return 1
  fi
}

generate_url(){
  # CONSTANTS
  NAME=$AIRTABLE_NAME
  URL=$AIRTABLE_URL
  DEFAULT_CATEGORY="Implementation"

  # INPUTS
  # TODO: make order matter less for these inputs
  DAY=$1
  PROJECT=$2
  TIME=$3
  CATEGORY=$4
  NOTES=$5

  if [[ "$DAY" ]]; then URL="$URL&prefill_Date=$(date -v $DAY +%m/%d/%Y)"; fi

  if [[ "$PROJECT" ]]; then URL="$URL&prefill_Project=$(fuzzy_find_time $PROJECT)"; fi

  if [[ "$TIME" ]]; then URL="$URL&prefill_Hours=$TIME"; fi

  if [[ "$NOTES" ]]; then URL="$URL&prefill_Notes=$NOTES"; fi

  if [[ "$CATEGORY" ]]; then
    URL="$URL&prefill_Category=$(fuzzy_find_time $CATEGORY)"
  else
    URL="$URL&prefill_Category=$DEFAULT_CATEGORY"
  fi

  info "Generated prefilled url for $DAY / $PROJECT / $TIME"
  open "$URL"
}

if [[ "$1" == "help" || "$1" == "usage" ]]; then
  usage
fi

if [[ "$1" == "open" || "$1" == "edit" ]]; then
  info "opening timesheet in editor"
  exec "$SHORT_EDITOR" "$TIMESHEET"
  exit
fi

if [[ "$1" == "submit" ]]; then
  echo ""
  info "running timesheet script"
  sh "$TIMESHEET"
  echo ""
  success "finished!"
  exit
fi

echo ""
generate_url "$@"
