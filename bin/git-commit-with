#!/usr/bin/env bash -e

# TODO: this script is clunky af and should probably be a hub feature anyway
INFOSHEET=$DOTFILES/secret/fuzzy_match_commit

source $DOTFILES/functions/log

usage() {
  echo ""
  success "Add co-authors to a commit in Github"
  info "USAGE:"
  info "  $(basename $0)"
  info "  $(basename $0) [help|usage]"
  info "    - display this message"
  info "  $(basename $0) <person> <message> <opts>"
  info "    - will try to find the person's info in saved secret file"
  info "    - Examples:"
  info "      $(basename $0) emily \"fix the bug\""
  info "      $(basename $0) emily \"really fix the bug\" --amend"
  info "  $(basename $0) [edit|open]"
  info "    - open coauthors file"
  echo ""
  exit
}

edit_coauthors() {
  info "opening co-author info file in editor.."
  exec "$EDITOR" "$INFOSHEET"
  exit
}

git-commit-with () {
  COAUTHOR=$1
  MESSAGE=$2
  OPTS=$3

  info "finding co-author info"

  full_info="$(fuzzy_match_commit $COAUTHOR)"
  info "$full_info"
  if [[ "$full_info" == "No match!" ]]; then
    fail "Couldn't match $COAUTHOR - you may need to add their info in \`secret/fuzzy_match_commit\`"
    exit
  else
    COAUTHOR="Co-authored-by: $full_info"
  fi

  FULL_BODY=$(echo -e "$MESSAGE\n\n$COAUTHOR")

  git commit $OPTS -m $FULL_BODY
}

if [[ ! -f "$INFOSHEET" ]]; then
  info "no co-author info found! Opening file.."
  touch $INFOSHEET
  edit_coauthors
fi

if [[ "$1" == "edit" || "$1" == "open" ]]; then
  edit_coauthors
fi

if [[ "$1" == "help" || "$1" == "usage" || ! "$1" || ! "$2" ]]; then
  usage
fi

source $INFOSHEET

git-commit-with "$@"
